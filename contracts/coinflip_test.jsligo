#import "./coinflip.jsligo" "Contract"

const difficultyPerBlock = 3_000_000n; // Difficulty for 1 block on my machine is 3_000_000n
const nbBlockDifficulty = 5n; // Protection to 5 blocks
const difficulty = nbBlockDifficulty * difficultyPerBlock; 

//3_000_000n for my laptop(XPS 15 i7-11800 @2.3GHz 32GB RAM) 15s block running this Ligo Test Framework test
//600_000_000n for FPGA (AWS F1) 15s block

const _1 =  Test.log(["difficultyPerBlock", difficultyPerBlock]);
const _2 =  Test.log(["nbBlockDifficulty", nbBlockDifficulty]);
const _3 =  Test.log(["difficulty", difficultyPerBlock * nbBlockDifficulty]); 

const [chest,ckey] =  Test.create_chest(Bytes.pack(Head()),difficulty );

const initial_storage: Contract.storage = {
    chest,
    guess: bytes ``,
    difficultyPerBlock,
    nbBlockDifficulty,
    result: false,
    startBlock : Tezos.get_level();
};

const  {addr , code , size} = Test.originate(contract_of(Contract), initial_storage, 0tez);

const guess = (side : Contract.coin_side): bool => {
  let status = Test.transfer(addr, (Guess(Bytes.pack(side))), 0mutez);
  Test.log(["status", status]);
  Test.log(["storage",Test.get_storage(addr)]);
  return true;
};


const finish_game = (): bool => {
  const newcKey = Test.create_chest_key(chest,difficulty);
  let status = Test.transfer(addr, (Finish_game(newcKey)), 0mutez);
  Test.log(["status", status]);
  const store =Test.get_storage(addr);
  Test.log(["storage",store]);
  Test.assert_with_error(store.result ,"Did not guessed well the coin, sorry");
  return store.result;
};


const test_guess = guess(Head());
const test_finish_game = finish_game();